package hywt.mandel;

public class Palette {

    public static int[][] palette = /*{
            {0,0,0},
            {255,0,0},
            {255,128,0},
            {255,255,0},
            {128,255,0},
            {0,255,0},
            {0,255,128},
            {0,255,255},
            {0,128,255},
            {0,0,255}
    };*/{{1, 1, 1}, {205, 92, 92}, {240, 128, 128}, {255, 0, 0}, {178, 34, 34}, {139, 0, 0},
            {188, 143, 143}, {165, 42, 42}, {128, 0, 0}, {250, 128, 114}, {255, 99, 71}, {233, 150, 122}, {255, 127, 80},
            {255, 69, 0}, {255, 160, 122}, {160, 82, 45}, {210, 105, 30}, {139, 69, 19}, {244, 164, 96}, {255, 218, 185},
            {205, 133, 63}, {255, 228, 196}, {255, 140, 0}, {222, 184, 135}, {210, 180, 140}, {255, 222, 173},
            {255, 228, 181}, {255, 165, 0}, {245, 222, 179}, {184, 134, 11}, {218, 165, 32}, {255, 215, 0},
            {240, 230, 140}, {238, 232, 170}, {189, 183, 107}, {255, 255, 0}, {128, 128, 0}, {107, 142, 35},
            {154, 205, 50}, {85, 107, 47}, {173, 255, 47}, {127, 255, 0}, {124, 252, 0}, {0, 255, 0}, {50, 205, 50},
            {152, 251, 152}, {144, 238, 144}, {34, 139, 34}, {0, 128, 0}, {0, 100, 0}, {143, 188, 143}, {46, 139, 87},
            {60, 179, 113}, {0, 255, 127}, {0, 250, 154}, {102, 205, 170}, {127, 255, 212}, {64, 224, 208},
            {32, 178, 170}, {72, 209, 204}, {0, 139, 139}, {0, 128, 128}, {0, 255, 255}, {175, 238, 238},
            {0, 206, 209}, {95, 158, 160}, {176, 224, 230}, {173, 216, 230}, {0, 191, 255}, {135, 206, 235},
            {135, 206, 250}, {70, 130, 180}, {30, 144, 255}, {176, 196, 222}, {100, 149, 237}, {65, 105, 225},
            {0, 0, 255}, {0, 0, 205}, {0, 0, 139}, {0, 0, 128}, {25, 25, 112}, {106, 90, 205}, {72, 61, 139},
            {123, 104, 238}, {147, 112, 219}, {138, 43, 226}, {75, 0, 130}, {153, 50, 204}, {148, 0, 211},
            {186, 85, 211}, {216, 191, 216}, {221, 160, 221}, {238, 130, 238}, {255, 0, 255}, {139, 0, 139},
            {128, 0, 128}, {218, 112, 214}, {199, 21, 133}, {255, 20, 147}, {255, 105, 180}, {219, 112, 147},
            {220, 20, 60}, {255, 192, 203}, {255, 182, 193}, {220, 220, 220}, {211, 211, 211}, {192, 192, 192},
            {169, 169, 169}, {128, 128, 128}, {105, 105, 105}, {119, 136, 153}, {112, 128, 144}, {47, 79, 79}};

    private static double[] colorTrans(int[][] palette, double it) {
        double percent = it - Math.floor(it);
        int c1 = (int) Math.floor(it) % palette.length;
        int c2 = (c1 + 1) % palette.length;
        double r = (1 - percent) * palette[c1][0] + (percent) * palette[c2][0];
        double g = (1 - percent) * palette[c1][1] + (percent) * palette[c2][1];
        double b = (1 - percent) * palette[c1][2] + (percent) * palette[c2][2];
        return new double[]{r, g, b};
    }

    public static Color getColor(int[][] palette, double it, long maxIter) {
        if (it == -1 || it >= maxIter) {
            return Color.BLACK;
        } else if (it <= 0) return new Color(palette[0][0], palette[0][1], palette[0][2]);
        double[] color = colorTrans(palette, it / 6.0);
        int r = (int) Math.round(color[0]);
        int g = (int) Math.round(color[1]);
        int b = (int) Math.round(color[2]);
        return new Color(r, g, b);
    }
}
